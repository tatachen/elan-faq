{"version":3,"file":"static/js/318.8e21b2a9.chunk.js","mappings":"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","sources":["../node_modules/mermaid/dist/classDiagram-v2-8ecb0bfc.js"],"sourcesContent":["import { p as parser, d as db, s as styles } from \"./styles-4ba6ed67.js\";\nimport { select, curveLinear } from \"d3\";\nimport * as graphlib from \"dagre-d3-es/src/graphlib/index.js\";\nimport { l as log, c as getConfig, u as utils, o as setupGraphViewbox, n as interpolateToCurve, k as getStylesFromArray, e as common } from \"./mermaid-934d9bea.js\";\nimport { r as render } from \"./index-67a42d7d.js\";\nimport \"ts-dedent\";\nimport \"dayjs\";\nimport \"@braintree/sanitize-url\";\nimport \"dompurify\";\nimport \"khroma\";\nimport \"lodash-es/memoize.js\";\nimport \"lodash-es/merge.js\";\nimport \"stylis\";\nimport \"lodash-es/isEmpty.js\";\nimport \"dagre-d3-es/src/dagre/index.js\";\nimport \"dagre-d3-es/src/graphlib/json.js\";\nimport \"./edges-80f1ebb6.js\";\nimport \"./createText-aebacdfe.js\";\nimport \"mdast-util-from-markdown\";\nconst sanitizeText = (txt) => common.sanitizeText(txt, getConfig());\nlet conf = {\n  dividerMargin: 10,\n  padding: 5,\n  textHeight: 10,\n  curve: void 0\n};\nconst addNamespaces = function(namespaces, g, _id, diagObj) {\n  const keys = Object.keys(namespaces);\n  log.info(\"keys:\", keys);\n  log.info(namespaces);\n  keys.forEach(function(id) {\n    var _a, _b;\n    const vertex = namespaces[id];\n    const shape = \"rect\";\n    const node = {\n      shape,\n      id: vertex.id,\n      domId: vertex.domId,\n      labelText: sanitizeText(vertex.id),\n      labelStyle: \"\",\n      style: \"fill: none; stroke: black\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    addClasses(vertex.classes, g, _id, diagObj, vertex.id);\n    log.info(\"setNode\", node);\n  });\n};\nconst addClasses = function(classes, g, _id, diagObj, parent) {\n  const keys = Object.keys(classes);\n  log.info(\"keys:\", keys);\n  log.info(classes);\n  keys.filter((id) => classes[id].parent == parent).forEach(function(id) {\n    var _a, _b;\n    const vertex = classes[id];\n    const cssClassStr = vertex.cssClasses.join(\" \");\n    const styles2 = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.label ?? vertex.id;\n    const radius = 0;\n    const shape = \"class_box\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      classData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssClassStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.domId,\n      tooltip: diagObj.db.getTooltip(vertex.id, parent) || \"\",\n      haveCallback: vertex.haveCallback,\n      link: vertex.link,\n      width: vertex.type === \"group\" ? 500 : void 0,\n      type: vertex.type,\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    if (parent) {\n      g.setParent(vertex.id, parent);\n    }\n    log.info(\"setNode\", node);\n  });\n};\nconst addNotes = function(notes, g, startEdgeId, classes) {\n  log.info(notes);\n  notes.forEach(function(note, i) {\n    var _a, _b;\n    const vertex = note;\n    const cssNoteStr = \"\";\n    const styles2 = { labelStyle: \"\", style: \"\" };\n    const vertexText = vertex.text;\n    const radius = 0;\n    const shape = \"note\";\n    const node = {\n      labelStyle: styles2.labelStyle,\n      shape,\n      labelText: sanitizeText(vertexText),\n      noteData: vertex,\n      rx: radius,\n      ry: radius,\n      class: cssNoteStr,\n      style: styles2.style,\n      id: vertex.id,\n      domId: vertex.id,\n      tooltip: \"\",\n      type: \"note\",\n      // TODO V10: Flowchart ? Keeping flowchart for backwards compatibility. Remove in next major release\n      padding: ((_a = getConfig().flowchart) == null ? void 0 : _a.padding) ?? ((_b = getConfig().class) == null ? void 0 : _b.padding)\n    };\n    g.setNode(vertex.id, node);\n    log.info(\"setNode\", node);\n    if (!vertex.class || !(vertex.class in classes)) {\n      return;\n    }\n    const edgeId = startEdgeId + i;\n    const edgeData = {\n      id: `edgeNote${edgeId}`,\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: \"dotted\",\n      // Set link type for rendering\n      arrowhead: \"none\",\n      //Set edge extra labels\n      startLabelRight: \"\",\n      endLabelLeft: \"\",\n      //Set relation arrow types\n      arrowTypeStart: \"none\",\n      arrowTypeEnd: \"none\",\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf.curve, curveLinear)\n    };\n    g.setEdge(vertex.id, vertex.class, edgeData, edgeId);\n  });\n};\nconst addRelations = function(relations, g) {\n  const conf2 = getConfig().flowchart;\n  let cnt = 0;\n  relations.forEach(function(edge) {\n    var _a;\n    cnt++;\n    const edgeData = {\n      //Set relationship style and line type\n      classes: \"relation\",\n      pattern: edge.relation.lineType == 1 ? \"dashed\" : \"solid\",\n      id: \"id\" + cnt,\n      // Set link type for rendering\n      arrowhead: edge.type === \"arrow_open\" ? \"none\" : \"normal\",\n      //Set edge extra labels\n      startLabelRight: edge.relationTitle1 === \"none\" ? \"\" : edge.relationTitle1,\n      endLabelLeft: edge.relationTitle2 === \"none\" ? \"\" : edge.relationTitle2,\n      //Set relation arrow types\n      arrowTypeStart: getArrowMarker(edge.relation.type1),\n      arrowTypeEnd: getArrowMarker(edge.relation.type2),\n      style: \"fill:none\",\n      labelStyle: \"\",\n      curve: interpolateToCurve(conf2 == null ? void 0 : conf2.curve, curveLinear)\n    };\n    log.info(edgeData, edge);\n    if (edge.style !== void 0) {\n      const styles2 = getStylesFromArray(edge.style);\n      edgeData.style = styles2.style;\n      edgeData.labelStyle = styles2.labelStyle;\n    }\n    edge.text = edge.title;\n    if (edge.text === void 0) {\n      if (edge.style !== void 0) {\n        edgeData.arrowheadStyle = \"fill: #333\";\n      }\n    } else {\n      edgeData.arrowheadStyle = \"fill: #333\";\n      edgeData.labelpos = \"c\";\n      if (((_a = getConfig().flowchart) == null ? void 0 : _a.htmlLabels) ?? getConfig().htmlLabels) {\n        edgeData.labelType = \"html\";\n        edgeData.label = '<span class=\"edgeLabel\">' + edge.text + \"</span>\";\n      } else {\n        edgeData.labelType = \"text\";\n        edgeData.label = edge.text.replace(common.lineBreakRegex, \"\\n\");\n        if (edge.style === void 0) {\n          edgeData.style = edgeData.style || \"stroke: #333; stroke-width: 1.5px;fill:none\";\n        }\n        edgeData.labelStyle = edgeData.labelStyle.replace(\"color:\", \"fill:\");\n      }\n    }\n    g.setEdge(edge.id1, edge.id2, edgeData, cnt);\n  });\n};\nconst setConf = function(cnf) {\n  conf = {\n    ...conf,\n    ...cnf\n  };\n};\nconst draw = async function(text, id, _version, diagObj) {\n  log.info(\"Drawing class - \", id);\n  const conf2 = getConfig().flowchart ?? getConfig().class;\n  const securityLevel = getConfig().securityLevel;\n  log.info(\"config:\", conf2);\n  const nodeSpacing = (conf2 == null ? void 0 : conf2.nodeSpacing) ?? 50;\n  const rankSpacing = (conf2 == null ? void 0 : conf2.rankSpacing) ?? 50;\n  const g = new graphlib.Graph({\n    multigraph: true,\n    compound: true\n  }).setGraph({\n    rankdir: diagObj.db.getDirection(),\n    nodesep: nodeSpacing,\n    ranksep: rankSpacing,\n    marginx: 8,\n    marginy: 8\n  }).setDefaultEdgeLabel(function() {\n    return {};\n  });\n  const namespaces = diagObj.db.getNamespaces();\n  const classes = diagObj.db.getClasses();\n  const relations = diagObj.db.getRelations();\n  const notes = diagObj.db.getNotes();\n  log.info(relations);\n  addNamespaces(namespaces, g, id, diagObj);\n  addClasses(classes, g, id, diagObj);\n  addRelations(relations, g);\n  addNotes(notes, g, relations.length + 1, classes);\n  let sandboxElement;\n  if (securityLevel === \"sandbox\") {\n    sandboxElement = select(\"#i\" + id);\n  }\n  const root = securityLevel === \"sandbox\" ? select(sandboxElement.nodes()[0].contentDocument.body) : select(\"body\");\n  const svg = root.select(`[id=\"${id}\"]`);\n  const element = root.select(\"#\" + id + \" g\");\n  await render(\n    element,\n    g,\n    [\"aggregation\", \"extension\", \"composition\", \"dependency\", \"lollipop\"],\n    \"classDiagram\",\n    id\n  );\n  utils.insertTitle(svg, \"classTitleText\", (conf2 == null ? void 0 : conf2.titleTopMargin) ?? 5, diagObj.db.getDiagramTitle());\n  setupGraphViewbox(g, svg, conf2 == null ? void 0 : conf2.diagramPadding, conf2 == null ? void 0 : conf2.useMaxWidth);\n  if (!(conf2 == null ? void 0 : conf2.htmlLabels)) {\n    const doc = securityLevel === \"sandbox\" ? sandboxElement.nodes()[0].contentDocument : document;\n    const labels = doc.querySelectorAll('[id=\"' + id + '\"] .edgeLabel .label');\n    for (const label of labels) {\n      const dim = label.getBBox();\n      const rect = doc.createElementNS(\"http://www.w3.org/2000/svg\", \"rect\");\n      rect.setAttribute(\"rx\", 0);\n      rect.setAttribute(\"ry\", 0);\n      rect.setAttribute(\"width\", dim.width);\n      rect.setAttribute(\"height\", dim.height);\n      label.insertBefore(rect, label.firstChild);\n    }\n  }\n};\nfunction getArrowMarker(type) {\n  let marker;\n  switch (type) {\n    case 0:\n      marker = \"aggregation\";\n      break;\n    case 1:\n      marker = \"extension\";\n      break;\n    case 2:\n      marker = \"composition\";\n      break;\n    case 3:\n      marker = \"dependency\";\n      break;\n    case 4:\n      marker = \"lollipop\";\n      break;\n    default:\n      marker = \"none\";\n  }\n  return marker;\n}\nconst renderer = {\n  setConf,\n  draw\n};\nconst diagram = {\n  parser,\n  db,\n  renderer,\n  styles,\n  init: (cnf) => {\n    if (!cnf.class) {\n      cnf.class = {};\n    }\n    cnf.class.arrowMarkerAbsolute = cnf.arrowMarkerAbsolute;\n    db.clear();\n  }\n};\nexport {\n  diagram\n};\n"],"names":["sanitizeText","txt","common","getConfig","conf","dividerMargin","padding","textHeight","curve","addNamespaces","namespaces","g","_id","diagObj","keys","Object","log","info","forEach","id","_ref","_a","_b","vertex","node","shape","domId","labelText","labelStyle","style","flowchart","class","setNode","addClasses","classes","parent","filter","_vertex$label","_ref2","cssClassStr","cssClasses","join","styles2","vertexText","label","classData","rx","ry","tooltip","db","getTooltip","haveCallback","link","width","type","setParent","addNotes","notes","startEdgeId","note","i","_ref3","text","noteData","edgeId","edgeData","concat","pattern","arrowhead","startLabelRight","endLabelLeft","arrowTypeStart","arrowTypeEnd","interpolateToCurve","curveLinear","setEdge","addRelations","relations","conf2","cnt","edge","_ref4","relation","lineType","relationTitle1","relationTitle2","getArrowMarker","type1","type2","getStylesFromArray","title","arrowheadStyle","labelpos","htmlLabels","labelType","replace","lineBreakRegex","id1","id2","draw","_ref5","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_version","_getConfig$flowchart","_ref6","_ref7","_ref8","securityLevel","nodeSpacing","rankSpacing","sandboxElement","root","svg","element","doc","labels","_iterator","_step","dim","rect","wrap","_context","prev","next","graphlib","multigraph","compound","setGraph","rankdir","getDirection","nodesep","ranksep","marginx","marginy","setDefaultEdgeLabel","getNamespaces","getClasses","getRelations","getNotes","length","select","nodes","contentDocument","body","render","utils","insertTitle","titleTopMargin","getDiagramTitle","setupGraphViewbox","diagramPadding","useMaxWidth","document","querySelectorAll","_createForOfIteratorHelper","s","n","done","value","getBBox","createElementNS","setAttribute","height","insertBefore","firstChild","err","e","f","stop","_x","_x2","_x3","_x4","apply","arguments","marker","renderer","setConf","cnf","_objectSpread","diagram","parser","styles","init","arrowMarkerAbsolute","clear"],"sourceRoot":""}